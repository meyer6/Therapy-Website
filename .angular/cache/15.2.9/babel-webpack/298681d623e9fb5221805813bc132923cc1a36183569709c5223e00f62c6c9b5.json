{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nconst _c0 = function (a0, a1, a2, a3, a5, a6) {\n  return {\n    \"font-size\": a0,\n    \"font-family\": a1,\n    \"font-weight\": a2,\n    \"line-height\": a3,\n    \"letter-spacing\": \"2em;\",\n    \"color\": a5,\n    \"margin-bottom\": a6\n  };\n};\nfunction TextItemComponent_div_0_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵelement(1, \"div\", 2);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r5 = i0.ɵɵnextContext();\n    const item_r1 = ctx_r5.$implicit;\n    const i_r2 = ctx_r5.index;\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngStyle\", i0.ɵɵpureFunction6(2, _c0, item_r1.fontSize.toString() + \"px\", item_r1.fontFamily, item_r1.fontWeight, item_r1.lineHeight.toString() + \"px\", item_r1.fontColour, i_r2 == ctx_r3.text.length - 1 ? \"0px\" : \"30px\"))(\"innerHTML\", item_r1.content, i0.ɵɵsanitizeHtml);\n  }\n}\nconst _c1 = function (a0, a2, a3) {\n  return {\n    \"border-color\": a0,\n    \"color\": \"#FFFFFF\",\n    \"background\": a2,\n    \"font-family\": a3\n  };\n};\nconst _c2 = function (a0, a1, a2) {\n  return {\n    \"border-color\": a0,\n    \"color\": a1,\n    \"font-family\": a2\n  };\n};\nfunction TextItemComponent_div_0_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r7 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\")(1, \"div\", 3);\n    i0.ɵɵlistener(\"mouseover\", function TextItemComponent_div_0_div_2_Template_div_mouseover_1_listener() {\n      i0.ɵɵrestoreView(_r7);\n      const ctx_r6 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r6.hover = true);\n    })(\"mouseleave\", function TextItemComponent_div_0_div_2_Template_div_mouseleave_1_listener() {\n      i0.ɵɵrestoreView(_r7);\n      const ctx_r8 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r8.hover = false);\n    });\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const item_r1 = i0.ɵɵnextContext().$implicit;\n    const ctx_r4 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngStyle\", ctx_r4.hover ? i0.ɵɵpureFunction3(2, _c1, item_r1.colour, item_r1.colour, item_r1.fontFamily) : i0.ɵɵpureFunction3(6, _c2, item_r1.colour, item_r1.colour, item_r1.fontFamily));\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", item_r1.content, \" \");\n  }\n}\nfunction TextItemComponent_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtemplate(1, TextItemComponent_div_0_div_1_Template, 2, 9, \"div\", 1);\n    i0.ɵɵtemplate(2, TextItemComponent_div_0_div_2_Template, 3, 10, \"div\", 1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const item_r1 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", item_r1.type == \"text\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", item_r1.type == \"button\");\n  }\n}\nexport class TextItemComponent {\n  constructor() {\n    // @Input() item: textTemplate = {\n    // \ttype: 'text',\n    // \tcontent: 'Not Loading',\n    // \tfontFamily: '',\n    // \tfontColour: '',\n    // \tfontSize: 16,\n    // \tfontWeight: 'normal',\n    // \tlineHeight: 27\n    // };\n    // @Input() lastItem: boolean = false;\n    this.text = [];\n    this.hover = false;\n  }\n}\nTextItemComponent.ɵfac = function TextItemComponent_Factory(t) {\n  return new (t || TextItemComponent)();\n};\nTextItemComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: TextItemComponent,\n  selectors: [[\"app-text-item\"]],\n  inputs: {\n    text: \"text\"\n  },\n  decls: 1,\n  vars: 1,\n  consts: [[4, \"ngFor\", \"ngForOf\"], [4, \"ngIf\"], [3, \"ngStyle\", \"innerHTML\"], [1, \"button\", 3, \"ngStyle\", \"mouseover\", \"mouseleave\"]],\n  template: function TextItemComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtemplate(0, TextItemComponent_div_0_Template, 3, 2, \"div\", 0);\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngForOf\", ctx.text);\n    }\n  },\n  dependencies: [i1.NgForOf, i1.NgIf, i1.NgStyle],\n  styles: [\".button[_ngcontent-%COMP%] {\\r\\n    border: 1px solid;\\r\\n\\r\\n    padding: 20px;\\r\\n    padding-right: 40px;\\r\\n    padding-left: 40px;\\r\\n    width: -moz-fit-content;\\r\\n    width: fit-content;\\r\\n\\r\\n    font-size: 13px;\\r\\n    letter-spacing: 0.01cm;\\r\\n    text-transform: uppercase;\\r\\n\\r\\n    cursor: pointer;\\r\\n\\r\\n    transition: background 0.2s, color 0.2s;\\r\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvdGV4dC1pdGVtL3RleHQtaXRlbS5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksaUJBQWlCOztJQUVqQixhQUFhO0lBQ2IsbUJBQW1CO0lBQ25CLGtCQUFrQjtJQUNsQix1QkFBa0I7SUFBbEIsa0JBQWtCOztJQUVsQixlQUFlO0lBQ2Ysc0JBQXNCO0lBQ3RCLHlCQUF5Qjs7SUFFekIsZUFBZTs7SUFFZix1Q0FBdUM7QUFDM0MiLCJzb3VyY2VzQ29udGVudCI6WyIuYnV0dG9uIHtcclxuICAgIGJvcmRlcjogMXB4IHNvbGlkO1xyXG5cclxuICAgIHBhZGRpbmc6IDIwcHg7XHJcbiAgICBwYWRkaW5nLXJpZ2h0OiA0MHB4O1xyXG4gICAgcGFkZGluZy1sZWZ0OiA0MHB4O1xyXG4gICAgd2lkdGg6IGZpdC1jb250ZW50O1xyXG5cclxuICAgIGZvbnQtc2l6ZTogMTNweDtcclxuICAgIGxldHRlci1zcGFjaW5nOiAwLjAxY207XHJcbiAgICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xyXG5cclxuICAgIGN1cnNvcjogcG9pbnRlcjtcclxuXHJcbiAgICB0cmFuc2l0aW9uOiBiYWNrZ3JvdW5kIDAuMnMsIGNvbG9yIDAuMnM7XHJcbn0iXSwic291cmNlUm9vdCI6IiJ9 */\"]\n});","map":{"version":3,"mappings":";;;;;;;;;;;;;;;IAEIA,2BAAiC;IACzBA,yBAWG;IACXA,iBAAM;;;;;;;IAXEA,eAQE;IARFA,2OAQE;;;;;;;;;;;;;;;;;;;;;IAKVA,2BAAmC;IAG3BA;MAAAA;MAAA;MAAA,qCAAmB,IAAI;IAAA,EAAC;MAAAA;MAAA;MAAA,qCAAqB,KAAK;IAAA,EAA1B;IAIxBA,YACJ;IAAAA,iBAAM;;;;;IAJFA,eACwF;IADxFA,wMACwF;IAExFA,eACJ;IADIA,gDACJ;;;;;IAxBRA,2BAA8C;IAC1CA,wEAaM;IAENA,yEASM;IACVA,iBAAM;;;;IAzBIA,eAAyB;IAAzBA,6CAAyB;IAezBA,eAA2B;IAA3BA,+CAA2B;;;ACTrC,OAAM,MAAOC,iBAAiB;EAL9BC;IAMC;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IAEA;IAES,SAAI,GAAyC,EAAE;IACxD,UAAK,GAAY,KAAK;;;AAdVD,iBAAiB;mBAAjBA,iBAAiB;AAAA;AAAjBA,iBAAiB;QAAjBA,iBAAiB;EAAAE;EAAAC;IAAAC;EAAA;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MDP9BT,kEA0BM;;;MA1BgBA,kCAAS","names":["i0","TextItemComponent","constructor","selectors","inputs","text","decls","vars","consts","template"],"sourceRoot":"","sources":["C:\\Users\\meyer\\Angular\\TherapyWebsite\\src\\app\\text-item\\text-item.component.html","C:\\Users\\meyer\\Angular\\TherapyWebsite\\src\\app\\text-item\\text-item.component.ts"],"sourcesContent":["\n<div *ngFor=\"let item of text, let i = index\">\n    <div *ngIf=\"item.type == 'text'\">\n            <div \n            [ngStyle]=\"{\n                'font-size': item.fontSize.toString() + 'px',\n                'font-family': item.fontFamily,\n                'font-weight': item.fontWeight,\n                'line-height': item.lineHeight.toString() + 'px',\n                'letter-spacing': '2em;',\n                'color': item.fontColour,\n                'margin-bottom': i == text.length -1 ? '0px' : '30px',\n            }\"\n            [innerHTML]=\"item.content\"\n        ></div>    \n    </div>\n\n    <div *ngIf=\"item.type == 'button'\">\n        <div \n            class=\"button\"\n            (mouseover)=\"hover=true\" (mouseleave)=\"hover=false\"\n            [ngStyle]=\"hover ? {'border-color': item.colour, 'color': '#FFFFFF', 'background': item.colour, 'font-family': item.fontFamily}:\n                {'border-color': item.colour, 'color': item.colour, 'font-family': item.fontFamily}\"\n        >\n            {{ item.content }}\n        </div>\n    </div>\n</div>\n\n","import { Component, Input } from '@angular/core';\nimport { buttonTemplate, module12Template, textTemplate } from '../Interfaces/content';\n\n@Component({\n    selector: 'app-text-item',\n    templateUrl: './text-item.component.html',\n    styleUrls: ['./text-item.component.css']\n})\nexport class TextItemComponent {\n\t// @Input() item: textTemplate = {\n\t// \ttype: 'text',\n\t// \tcontent: 'Not Loading',\n\t// \tfontFamily: '',\n\t// \tfontColour: '',\n\t// \tfontSize: 16,\n\t// \tfontWeight: 'normal',\n\t// \tlineHeight: 27\n\t// };\n\n\t// @Input() lastItem: boolean = false;\n\n\t@Input() text: Array<textTemplate | buttonTemplate> = [];\n\thover: boolean = false;\n}\n "]},"metadata":{},"sourceType":"module","externalDependencies":[]}